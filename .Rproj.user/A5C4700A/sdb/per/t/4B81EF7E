{
    "collab_server" : "",
    "contents" : "rm(list=ls())\n\ninstall.packages(\"data.table\")\nlibrary(data.table)\noptions(warn=-1) #Turn warning off\n\n#Write a function called best that take two arguments: the 2-character abbreviated name of a state and an\n#outcome name. The function reads the outcome-of-care-measures.csv file and returns a character vector\n#with the name of the hospital that has the best (i.e. lowest) 30-day mortality for the specified outcome\n#in that state. The hospital name is the name provided in the Hospital.Name variable. The outcomes can\n#be one of “heart attack”, “heart failure”, or “pneumonia”. Hospitals that do not have data on a particular\n#outcome should be excluded from the set of hospitals when deciding the rankings.\n\n\nbest <- function(state, outcome){\n     ## Read outcome data\n     df <- read.csv(\"outcome-of-care-measures.csv\", colClasses = \"character\")\n     df_extract <- as.data.frame(cbind(\"Hospital name\" = df[,2],\"State\"= df[,7],\"heart attack\"=as.numeric(df[,11]),\"heart failure\"=as.numeric(df[,17]), \"pneumonia\"=as.numeric(df[,23])))\n     ## Check that state and outcome are valid\n     if(!is.element(state, df_extract[,2])){\n          return(paste(\"Input state\",state,\"is invalid.\",sep=\" \"))\n     }\n     else if(!is.element(outcome, names(df_extract))){\n          return(paste(\"Input outcome\",outcome,\"is invalid.\",sep=\" \"))\n     }else{\n          df <- df_extract[,c(\"Hospital name\",\"State\",outcome)]\n          df <- df[complete.cases(df),]\n     }\n     ## Return hospital name in that state with lowest 30-day death rate\n     list <- subset(df,State == state)\n     list[,3] <- as.numeric(as.character(list[,3]))\n     return(as.character(list[which.min(list[,3]),][1,1]))\n}\n\n##ANSWER CHECK\nbest(\"TX\", \"heart attack\") #Result: [1] \"CYPRESS FAIRBANKS MEDICAL CENTER\", CORRECT\nbest(\"TX\", \"heart failure\") #Result: [1] \"FORT DUNCAN MEDICAL CENTER\", CORRECT\nbest(\"MD\", \"heart attack\") #Result: [1] \"JOHNS HOPKINS HOSPITAL, THE\", CORRECT\nbest(\"MD\", \"pneumonia\") #Result: [1] \"GREATER BALTIMORE MEDICAL CENTER\", CORRECT\n\n\n\nrankhospital <- function(state, outcome, num=\"best\"){\n     ## Read outcome data\n     df <- read.csv(\"outcome-of-care-measures.csv\", colClasses = \"character\")\n     df_extract <- as.data.frame(cbind(\"Hospital name\" = df[,2],\"State\"= df[,7],\"heart attack\"=as.numeric(df[,11]),\"heart failure\"=as.numeric(df[,17]), \"pneumonia\"=as.numeric(df[,23])))\n     ## Check that state and outcome are valid\n     if(!is.element(state, df_extract[,2])){\n          return(paste(\"Input state\",state,\"is invalid.\",sep=\" \"))\n     }\n     else if(!is.element(outcome, names(df_extract))){\n          return(paste(\"Input outcome\",outcome,\"is invalid.\",sep=\" \"))\n     }else{\n          df <- df_extract[,c(\"Hospital name\",\"State\",outcome)]\n          df <- df[complete.cases(df),]\n     }\n     ## Return hospital name in that state with lowest 30-day death rate\n     list <- subset(df,State == state)\n     list[,3] <- as.numeric(as.character(list[,3]))\n     list <- list[order(list[,3], list[,1]),]\n     list$Rank <- seq.int(nrow(list))\n     if(num==\"best\"){\n          return(as.character(list[list$Rank==1,][1,1]))\n     }\n     else if(num==\"worst\"){\n          return(as.character(list[list$Rank==nrow(list),][1,1]))\n     }\n     else if(num>nrow(list)){\n          return(NA)\n     }\n     else{\n          return(as.character(list[list$Rank==num,][1,1]))\n     }\n}\n\n##ANSWER CHECK\nrankhospital(\"TX\",\"heart failure\", 4) #RESULT: [1] \"DETAR HOSPITAL NAVARRO\", CORRECT\nrankhospital(\"MD\",\"heart attack\", \"worst\") #RESULT: [1] \"HARFORD MEMORIAL HOSPITAL\", CORRECT\nrankhospital(\"MN\",\"heart attack\", 5000) #RESULT: [1] NA, CORRECT\n\n\n\nrankall <- function(outcome, num = \"best\") {\n     df <- read.csv(\"outcome-of-care-measures.csv\", colClasses = \"character\")\n     \n     df_extract <- as.data.frame(cbind(\"hospital\" = df[,2],\"State\"= df[,7],\"heart attack\"=as.numeric(df[,11]),\"heart failure\"=as.numeric(df[,17]), \"pneumonia\"=as.numeric(df[,23])))\n     df_extract[,3] <- as.numeric(as.character(df_extract[,3]))\n     df_extract[,4] <- as.numeric(as.character(df_extract[,4]))\n     df_extract[,5] <- as.numeric(as.character(df_extract[,5]))\n     \n     ## Check that outcome is valid\n     if(!is.element(outcome, names(df_extract))){\n          return(paste(\"Input outcome\",outcome,\"is invalid.\",sep=\" \"))\n     }else{\n          df <- df_extract[,c(\"hospital\",\"State\",outcome)]\n          df <- df[order(df[,2], df[,3], df[,1]),]\n          state_list <- sort(unique(df[,2]))\n     }\n     \n     \n     k <- 0\n     for(i in 1:length(state_list)){\n          for(j in 1:nrow(df[df$State==state_list[i],])){\n               df$Rank[j+k] <- j\n          }\n          k <- k + nrow(df[df$State==state_list[i],])\n     }\n     \n     State <- state_list\n     State <- as.data.frame(State)\n     \n     if(num==\"best\"){\n          num <- 1\n          output <- merge(x = df[df$Rank==num,], y = State, by = \"State\", all = TRUE)\n          return(output[,1:2])\n     }\n     else if(num==\"worst\"){\n          df <- df[complete.cases(df),]\n          output <- setDT(df)[, .SD[which.max(eval(parse(text = outcome )))], by=State]\n          output <- as.data.frame(output)\n          return(output[,1:2])\n     }\n     \n     else{\n          output <- merge(x = df[df$Rank==num,], y = State, by = \"State\", all = TRUE)\n          return(output[,1:2])\n     }\n     \n     \n}\n\n##ANSWER CHECK\nhead(rankall(\"heart attack\", 20),10) #CORRECT\ntail(rankall(\"pneumonia\", \"worst\"), 3) #CORRECT\ntail(rankall(\"heart failure\"), 10) #CORRECT\n\n##COURSERA WEEK4 QUIZ:\nbest(\"SC\", \"heart attack\")\nbest(\"NY\", \"pneumonia\")\nbest(\"AK\", \"pneumonia\")\nrankhospital(\"NC\", \"heart attack\", \"worst\")\nrankhospital(\"WA\", \"heart attack\", 7)\nrankhospital(\"TX\", \"pneumonia\", 10)\nrankhospital(\"NY\", \"heart attack\", 7)\nr <- rankall(\"heart attack\", 4)\nr\nas.character(subset(r, State == \"HI\")$hospital)\nr <- rankall(\"pneumonia\", \"worst\")\nas.character(subset(r, State == \"NJ\")$hospital)\nr <- rankall(\"heart failure\", 10)\nas.character(subset(r, State == \"NV\")$hospital)\n\n##RESULT: 100%\n",
    "created" : 1509271724753.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3435068367",
    "id" : "4B81EF7E",
    "lastKnownWriteTime" : 1509293781,
    "last_content_update" : 1509293781685,
    "path" : "E:/OneDrive/Coursera Data Science/Coursera Week4 Project/Coursera Week4 Project_R_Solution.R",
    "project_path" : "Coursera Week4 Project_R_Solution.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}